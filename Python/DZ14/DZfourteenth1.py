"""–í–æ–∑—å–º–∏—Ç–µ 1-3 –∑–∞–¥–∞—á–∏ –∏–∑ —Ç–µ—Ö, —á—Ç–æ –±—ã–ª–∏ –Ω–∞ –ø—Ä–æ—à–ª—ã—Ö —Å–µ–º–∏–Ω–∞—Ä–∞—Ö –∏–ª–∏ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö. üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫ –Ω–∏–º —Ç–µ—Å—Ç—ã.
2-5 —Ç–µ—Å—Ç–æ–≤ –Ω–∞ –∑–∞–¥–∞—á—É –≤ —Ç—Ä—ë—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö:
‚óã doctest,
‚óã unittest,
‚óã pytest."""

""" –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å. 
–ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–¥–∏—É—Å –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ 
—ç–∫–∑–µ–º–ø–ª—è—Ä–∞. –£ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ 
–¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ –µ—ë –ø–ª–æ—â–∞–¥—å
"""
"""–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –∏ –ø—Ä–æ–±–µ–ª–æ–≤.
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ."""

"""Doctest"""

from string import ascii_letters

# def delfromtext(text: str):
#     """ 
#     >>> delfromtext('–∫—Ä–æ–º–µ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ. –∞–ª—Ñ–∞–≤–∏—Ç–∞ 123/ –∞–ø—Ä–∞–æ–ø! hjjkg')
#     '      hjjkg'
   
#     >>> delfromtext('–∫—Ä–æ–º–µ–±—É–∫–≤–ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ.–∞–ª—Ñ–∞–≤–∏—Ç–∞123/–∞–ø—Ä–∞–æ–ø!hjjkg')
#     'hjjkg'

#     >>> delfromtext('kpome.–±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ.–∞–ª—Ñ–∞–≤–∏—Ça123/ –∞–øA–∞o–ø! hjjkg')
#     'kpome a ao hjjkg'
#      """
    
#     a = ''
#     for char in text:
#         if char in ascii_letters or char == ' ':
#             a += char         
#     return a.lower()
# print(delfromtext('kpome.–±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ.–∞–ª—Ñ–∞–≤–∏—Ça –∞–øA–∞o–ø! hjjkg'))

# if __name__ == '__main__':
#     import doctest
#     doctest.testmod(verbose=True)


"""Unittest"""

import unittest

def delfromtext(text: str):
    
    a = ''
    for char in text:
        if char in ascii_letters or char == ' ':
            a += char         
    return a.lower()
print(delfromtext('—Ä–æ–º–µ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ. –∞–ª—Ñ–∞–≤–∏—Ç–∞ 123/ –∞–ø—Ä–∞–æ–ø! hjjkg'))

class TestCaseName(unittest.TestCase):
    
    def test_no_change(self):
         self.assertEqual(delfromtext('–∫—Ä–æ–º–µ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ. –∞–ª—Ñ–∞–≤–∏—Ç–∞ 123/ –∞–ø—Ä–∞–æ–ø! hjjkg'),'      hjjkg')
    
    def test_no_spaces(self):
         self.assertEqual(delfromtext('–∫—Ä–æ–º–µ–±—É–∫–≤–ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ.–∞–ª—Ñ–∞–≤–∏—Ç–∞123/–∞–ø—Ä–∞–æ–ø!hjjkg'),'hjjkg') 

    def test_lathin_instead(self):
         self.assertEqual(delfromtext('kpome.–±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ.–∞–ª—Ñ–∞–≤–∏—Ça123/ –∞–øA–∞o–ø! hjjkg'),'kpome a ao hjjkg')


if __name__ == '__main__':
    unittest.main(verbosity= 2)