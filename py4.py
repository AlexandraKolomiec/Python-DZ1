""" Напишите функцию, которая принимает строку текста. Вывести функцией каждое слово с новой строки.
Строки нумеруются начиная с единицы
Слова выводятся отсортированными согласно кодировки Unicode
Текст выравнивается по правому краю так, чтобы у самого длинного слова был один пробел между ним и номером строки.
"""

# def read_str(a: str)-> None:
#     str_2 = sorted(a.split())
#     max_len = len(max(str_2, key=len))#получ кол-во символов len()
    
#     for i, k in enumerate(str_2, start=1):
#         print(f'{i} {k:>{max_len}}')

# read_str('1234561 aaa bbb cabnnj')

"""Напишите функцию, которая принимает строку текста. 
Сформируйте список с уникальными кодами Unicode каждого символа введённой строки отсортированный по убыванию.
 """

def func(text:str) -> list[int]:
    result = set()

    for item in text:
      result.add(ord(item))
    result = sorted(result, reverse=True)
    return result

print(func('Напишите функцию, которая принимает строку текста '))

""" Функция получает на вход строку из двух чисел через пробел. 
Сформируйте словарь, где ключом будет символ из Unicode, а значением - целое число. 
Диапазон пар ключ-значение от наименьшего из введённых пользователем чисел до наибольшего включительно
"""

# def two_num (n: str) -> dict[str, int]:
#     one, two = map(int, n.split())
#     result = {}

#     for i in range(min(one, two), max(one, two)+1):
#         result[chr(i)] = i
#     return result
# print(two_num('50 100'))

""" Функция получает на вход список чисел. 
Отсортируйте его элементы in place без использования встроенных в язык сортировок. 
Как вариант напишите сортировку пузырьком. Её описание есть в википедии."""
       
# def bubble (l: list) -> None:
#     n = 1
#     while n < len(l):
#         for i in range (len(l) - n):
            
#             if l[i] > l[i + 1]:
#                 l [i], l[i + 1] = l[i + 1], l [i]
#         n +=1       
#     return l

# list1 = list((10, 15, 48, 77, 1, -7))
# bubble(list1)
# print(list1)

"""Функция принимает на вход три списка одинаковой длины:
имена str, ставка int, премия str с указанием процентов вида “10.25%”.
Вернуть словарь с именем в качестве ключа и суммой премии в качестве значения. 
Сумма рассчитывается как ставка умноженная на процент премии
 """

# def awards(names: list[str], level: list[int], bonus: list[str]) -> dict[str, float]:
    
#     result = {}
    
#     for n, l, b in zip(names, level, bonus):
#         result[n] = (l * float(b[:-1])) / 100 # [:-1]срез, чтоб без %
#     return result

# n1 = ['Ivan', 'Alex', 'Maria']
# l1 = [15000, 18000, 19000]
# b1 = ['10.25%', '11.80%', '9.00%']

# print(awards(n1, l1, b1))

